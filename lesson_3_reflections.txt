
When would you want to use a remote repository rather than keeping all your work
local?

   When I want to collaborate with other people, or back up my projects on cloud, or I just want to share something with others, I'll use a remote repository.
   
Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

    Something changed in remote repository maybe come from another collaborater, and the change maybe is unfinished. If use automatically pull to stay up-to-date, my local project maybe be in a mess.

Describe the differences between forks, clones, and branches.  When would you
use one instead of another?

    forks : copy a repository from GitHub to GitHub.
    clone : copy a repository from GitHub to local machine, or from one machine to other machine.
    branch: in repository.

    When I need just a repository on my local machine, I'll use clone instead of forks.
    When I need share a repository with many people, I'll use forks instead clone.

What is the benefit of having a copy of the last known state of the remote
stored locally?

    To a copy of the last known state of the remote stored locally, through I compare the copy and the remote one, I'll know what have been changed on GitHub servers by other collaboraters.
    I can update my local copy while I am offline.

How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?

    Fill in your answer here

When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?

    Fill in your answer here
